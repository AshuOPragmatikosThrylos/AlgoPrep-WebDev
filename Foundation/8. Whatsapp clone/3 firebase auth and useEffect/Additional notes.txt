if we have no fallback route, then React just will render nothing from the Routes section

<Routes>
    <Route path="*" element={<PageNotFound></PageNotFound>} ></Route>
</Routes>

--------------
How to implement protected routes?

logged in na ho agr to seedhe Login wala component render nhi krna h (warna /login pe to Login component render hota hi h and / pe bhi hoga --> same component rendered for 2 routes --> just creates confusion)
industry practice is to redirect to /login --> can be done though <Navigate>
<Navigate>, useNavigate hook is given by ReactRouterDOM

<Route path="/"  element={<ProtectedRoute isLoggedIn={isLoggedIn}  >
       <Home setIsLoggedIn={setIsLoggedIn}></Home>
</ProtectedRoute>}></Route>

function ProtectedRoute(props) {
    const isLoggedIn = props.isLoggedIn;
    const children = props.children;
    if (isLoggedIn) {
        return children
    } else {
        return <Navigate to="/login"></Navigate>
    }
}


logout k smay alag se login pe redirect krne ka zaroort nhi logout k code me
wo sb humne pehle hi kr rhkha h (as shown in above code)
humko bs state change krna h

Home.jsx

import { useNavigate } from 'react-router-dom';

  const navigate = useNavigate();

  const handleLogout = async () => {
    navigate("/login");
  }


https://stackoverflow.com/questions/78556899/navigate-vs-usenavigate-in-react-router-dom
When to use <Navigate> and when to use useNavigate()? 
   - Use <Navigate> when you need simple, conditional redirection based on props or state.
   - Use useNavigate when you need to trigger navigation programmatically in response to events or complex logic

---------------------------------------
How to protect multiple routes? 

write code dynamically....use children

<Routes>
    <Route path="/"  element={<ProtectedRoute isLoggedIn={isLoggedIn}  >
        <Home setIsLoggedIn={setIsLoggedIn}></Home>
    </ProtectedRoute>}></Route>

    <Route path="/chat/:uniqueId" element={
        <ProtectedRoute isLoggedIn={isLoggedIn}><Chat></Chat></ProtectedRoute>
    }></Route>

    <Route path="/login" element={<Login setIsLoggedIn={setIsLoggedIn} ></Login>}></Route>
</Routes>

function ProtectedRoute(props) {
    const isLoggedIn = props.isLoggedIn;
    const children = props.children;
    if (isLoggedIn) {
        return children
    } else {
        return <Navigate to="/login"></Navigate>
    }
}

----------------------------------------
How to use Firebase for authentication ?
signup/login/logout

Google the steps for the same
-----------------------------



useEffect hook

koi bhi site jaise swiggy ...pehle boxes load hote h phir images
to UI pe at least kuch na kuch dikha do phir load krte rho 

to ye load/fetch krna background me jb tk page pe loading dikha rha
phir eventually fetched chiz ko render krna 
above can be coded inside useEffect()


User.jsx

function User() {
    const [loading, setLoading] = useState(true);
    const [user, setUser] = useState(null);

    function cb() {
        // // logic -> data fetch -> UI update
        // console.log("I an after render")

        (async function fetchUser() {
            const response = await fetch("https://jsonplaceholder.typicode.com/users/1");
            const userData = await response.json();
            console.log("userData", userData);
            setLoading(false);
            setUser(userData);
        })()
    }


    useEffect(cb, []); //called after the first render mnetioned below

    if (loading)
        return (
            <>
                <div>Profile Page</div>
                <div>...Loading</div>
            </>
        )

    if (loading == false) {
        return (<>
            <div>Profile Page</div>
            <div>{user.username}</div>
            <div>{user.address.street}</div>
            <div>{user.phone}</div>
            <div>{user.website}</div>
        </>)
    }
}

