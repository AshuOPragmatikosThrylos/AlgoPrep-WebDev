express is a library on top of node js which helps to write APIs(behind the scene: http/https modules of nodejs are used)



npm init -y --> isse package.json krke ek file bn jaegi
npm is like playstore for nodejs (node package manager)

package.json me jo bhi dependencies mentioned hota h that gets downloaded under node_modules directory when we run `npm i` command

index.js
Create a GET API

const express = require("express");
const app = express();

const content = fs.readFileSync("posts.json", "utf-8");
const jsonPosts = JSON.parse(content);

// server start
app.listen(3000, function () {
    console.log("server is running at port 3000");
})

app.get("/posts", getAllPostsHandler) // this is an event listener

function getAllPostsHandler(req, res) {
    try {
        console.log("Recieved get Request");
        res.status(200).json(jsonPosts);
    } catch (err) {
        res.status(500).json({
            message: "internal server error"
        })
    }

}
---------------------
const express = require('express');
const app = express();

// app.use(express.json()); // this has to be added before the route
// Notice we did NOT include app.use(express.json());

app.post('/user', (req, res) => {
  // Without express.json(), req.body will be undefined for JSON data
  const { name, age } = req.body;
  console.log(`Received user data: Name - ${name}, Age - ${age}`);
  res.send('User data received!');
});

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});


Without app.use(express.json()), Express does not automatically parse the JSON data.
As a result, req.body will be undefined because Express doesn't know how to handle the incoming JSON
if we would have used it then 
req.body would have been --> {"name": "John", "age": 30}
and thus the output on a request would have been 
Received user data: Name - John, Age - 30


-----------------------
dev krte smay server baar baar manulaly restart na krna pde isliye install (under devDependencies key not dependencies key in package.json)--> nodemon

